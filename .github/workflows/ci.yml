name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Check Docker Compose
      run: |
        docker-compose config

    - name: Check if the containers are running
      run: |
        docker-compose up -d
        docker-compose ps
        if [ $? -ne 0 ]; then exit 1; fi

    - name: Run tests
      run: |
        cd tests/parser
        pytest
        cd ../data_pipeline/feature_engineering
        pytest

    - name: Build Sphinx documentation
      run: |
        pip install Sphinx
        pip install breathe
        cd docs
        make html
  
  deploy:
    runs-on: ubuntu-latest

    env:
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Deploy
      run: |
        cd gces-poetry
        pip install poetry
        poetry install
        poetry build
        poetry config pypi-token.pypi ${{ env.PYPI_TOKEN }}
        poetry publish
    
